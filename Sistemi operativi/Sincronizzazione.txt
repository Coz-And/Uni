Sincronizzazione e comunicazione fra processi /thraed
  per realizzare applicazioni costrituite da più processi o thread cooperanti occorrono meccanismi per : 
      1. Attivazione e terminazione di proecsi / thread
      2. Sincronizzazione : p1 per andare avanti attende che p2 sia arrivato ad un dato punto [utile per disciplinare l'accesso a dati condivisi]
      3. Comunicazione : p2 passa dati a p1 [Tipicamente attende anche nella siconizzazione "Semplice" c'è almeno il passaggio dell'informazione che p2 é arrivato al punto desiderato]
  
  I meccanismi si possono trovare in :
  a. linguaggi concorrenti [dotati di istruzioni apposite per attivare e far sincronizzare / comunicare più processi / thread]
  b. system calls messe a disposizione dal sistema operativo
  c. librerie di funzioni per lo sviluppo di applicazioni concorrenti 


  Modello a memoria condivisa : i processi condividono almeno alcune variabili in memoria, se un processo /thread modifica una di queste variabili, 
  gtutti gli altri processi/thread vedanno il nuovo valore . la condivisione é naturale per threads, per i processi é stata introdotta con meccanismi
  appositi.

  Modello a scambio di messaggi  : i processi non condivisono aree di memoeria, ma possono inviarsi messaggi utilizzando istruzioni sed e receive. lo scambio di messaggi :
  i processi. 


  Sezioni critiche : requisiti per una buona soluzione 
  Una soluzione soddisfacente al problema della mutua esclusione di sezioni critiche deve rispettare i seguenti requisiti : 
    a. Mutua Esclusione se il processo Pi é in esecuzione nella propria sezione critica, nessun altro processo può essere in esecuzione nella propria sezione critica
    b. Progresso se nessun processo è in esecuzione nella propria sezioni critica, e vi sono dei processi che intendono entrare nelle rispettive sezioni critiche, la 
       scelta su chi può procedere dipende solo da quali sono questi ultimi processi, e questa scelta non può essere rimandata indefinitamente.
    c. Attesa limitata un processo Pi ha richiesto di entrare in sezione critica, esiste un limite massimo al numero di volte per cui viene consentito ad altri proessi di 
       entrare nelle rispettive sezioni critiche prima che si accordi l'accesso a pi.

si Assume che ogni processo rimanga in sezione critica per un tempo finito, fare alcuna assunzioni sulla velocità relativa dei processi.

Formulazione Alternativa dei requisiti di una buona soluzione  é  : 
  1. essere garantita la mutua eslcusione nell'esecuzione delle sezioni critiche da parte di tutti i processi coinvolti.
  2. non può basarsi su ipotesi rigurado alle velocità relative di esecuzione dei processi coinvolti e al numero di CPU.
  3. processo che sta eseguendo sezioni non critiche non deve impedire ad altri processi di accedere alla propria sezione critica.
  4. non può accedere che un processo debba attendere indefinitamente il proprio turno di entrare in sezione critica.

  Soluzione dei problemi di mutua eslcusione in sezione critica
  